/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frame;

import constant.SpecialityConstant;
import constant.WorkplaceConstant;
import entity.Admin;
import entity.Clazz;
import entity.Lecturer;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import main.Main;

/**
 *
 * @author Admin
 */
public class ClazzMangementFrame extends javax.swing.JFrame {

    /**
     * Creates new form LecturerMangementFrame
     */
    private ArrayList<Clazz> clazzes = new ArrayList<>();
    private String workplace;
    private Admin admin;
    private Lecturer lecturerOrigin;
    
    public ClazzMangementFrame(Admin admin, String workplace){
        this.clazzes= Main.clazzes;
        initComponents();
        this.getContentPane().setBackground(new Color(204, 204, 255));
        this.setLocationRelativeTo(null);
        this.workplace = workplace;
        this.admin = admin;
        for (Clazz clazz :clazzes) {
            if (WorkplaceConstant.DICHVONGHAU.equals(workplace)){
                this.clazzes.add(clazz);
            } else if (WorkplaceConstant.NGUYENDINHCHIEU.equals(workplace)) {
                this.clazzes.add(clazz);  
            } else if (WorkplaceConstant.TOHUU.equals(workplace)) {
                this.clazzes.add(clazz);  
            }
        }
        for (Clazz clazz : this.clazzes) {
            Vector vectorRow = new Vector();
            vectorRow.add(clazz.getId());
            if (clazz.getLecturer() == null){
                vectorRow.add("");
            } else {
                vectorRow.add(clazz.getLecturer().getName());
            }
            vectorRow.add(clazz.getSpeciality());
            vectorRow.add(clazz.getName());
            vectorRow.add(clazz.getSchedule());
        }
        displayJTable(jTable1);
    }
    public ClazzMangementFrame() {
        initComponents();
        for (Clazz clazz : clazzes) {
            Vector vectorRow = new Vector();
            vectorRow.add(clazz.getId());
            if (clazz.getLecturer() == null){
                vectorRow.add("");
            } else {
                vectorRow.add(clazz.getLecturer().getName());
            }
            vectorRow.add(clazz.getSpeciality());
            vectorRow.add(clazz.getName());
            vectorRow.add(clazz.getSchedule());
        }
        this.getContentPane().setBackground(new Color(204, 204, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupSchedule = new javax.swing.ButtonGroup();
        diaSuccessfullyAdded = new javax.swing.JDialog();
        lblSuccessfullyAddedDialog = new javax.swing.JLabel();
        btnCloseAddedDialog = new javax.swing.JButton();
        diaSuccessfullyEdited = new javax.swing.JDialog();
        lblSuccessfullyEditedDialog = new javax.swing.JLabel();
        btnCloseEditedDialog = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        lblSpeciality = new javax.swing.JLabel();
        lblClassName = new javax.swing.JLabel();
        lblSchedule = new javax.swing.JLabel();
        rdEv = new javax.swing.JRadioButton();
        rdOdd = new javax.swing.JRadioButton();
        cboSpeciality = new javax.swing.JComboBox<>();
        txtClassName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnLecturersList = new javax.swing.JButton();
        spnLecturerId = new javax.swing.JSpinner();
        chkLecturerIdLeftBlank = new javax.swing.JCheckBox();
        btnBackToHomePage = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuSetting = new javax.swing.JMenu();
        menuSecurity = new javax.swing.JMenuItem();
        ckbmenuDarkMode = new javax.swing.JCheckBoxMenuItem();

        lblSuccessfullyAddedDialog.setText("Successfully Added !");

        btnCloseAddedDialog.setText("Ok");
        btnCloseAddedDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseAddedDialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diaSuccessfullyAddedLayout = new javax.swing.GroupLayout(diaSuccessfullyAdded.getContentPane());
        diaSuccessfullyAdded.getContentPane().setLayout(diaSuccessfullyAddedLayout);
        diaSuccessfullyAddedLayout.setHorizontalGroup(
            diaSuccessfullyAddedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaSuccessfullyAddedLayout.createSequentialGroup()
                .addGroup(diaSuccessfullyAddedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diaSuccessfullyAddedLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(btnCloseAddedDialog))
                    .addGroup(diaSuccessfullyAddedLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(lblSuccessfullyAddedDialog)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        diaSuccessfullyAddedLayout.setVerticalGroup(
            diaSuccessfullyAddedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaSuccessfullyAddedLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(lblSuccessfullyAddedDialog)
                .addGap(65, 65, 65)
                .addComponent(btnCloseAddedDialog)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        lblSuccessfullyEditedDialog.setText("Successfully Edited !");

        btnCloseEditedDialog.setText("Ok");
        btnCloseEditedDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseEditedDialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diaSuccessfullyEditedLayout = new javax.swing.GroupLayout(diaSuccessfullyEdited.getContentPane());
        diaSuccessfullyEdited.getContentPane().setLayout(diaSuccessfullyEditedLayout);
        diaSuccessfullyEditedLayout.setHorizontalGroup(
            diaSuccessfullyEditedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaSuccessfullyEditedLayout.createSequentialGroup()
                .addGroup(diaSuccessfullyEditedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diaSuccessfullyEditedLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(btnCloseEditedDialog))
                    .addGroup(diaSuccessfullyEditedLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(lblSuccessfullyEditedDialog)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        diaSuccessfullyEditedLayout.setVerticalGroup(
            diaSuccessfullyEditedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaSuccessfullyEditedLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(lblSuccessfullyEditedDialog)
                .addGap(65, 65, 65)
                .addComponent(btnCloseEditedDialog)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CLass's Id", "Lecturer's Name", "Speciality", "Class's Name", "Schedule"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lblName.setBackground(new java.awt.Color(204, 204, 255));
        lblName.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(102, 153, 255));
        lblName.setText("Lecturer's Id:");

        lblSpeciality.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblSpeciality.setForeground(new java.awt.Color(102, 153, 255));
        lblSpeciality.setText("Speciality:");

        lblClassName.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblClassName.setForeground(new java.awt.Color(102, 153, 255));
        lblClassName.setText("Class's Name:");

        lblSchedule.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblSchedule.setForeground(new java.awt.Color(102, 153, 255));
        lblSchedule.setText("Schedule:");

        btnGroupSchedule.add(rdEv);
        rdEv.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        rdEv.setText("Mon, Wed, Fri ");
        rdEv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdEvActionPerformed(evt);
            }
        });

        btnGroupSchedule.add(rdOdd);
        rdOdd.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        rdOdd.setText("Tue, Thur, Sat");
        rdOdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdOddActionPerformed(evt);
            }
        });

        cboSpeciality.setBackground(new java.awt.Color(204, 204, 255));
        cboSpeciality.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        cboSpeciality.setForeground(new java.awt.Color(102, 153, 255));
        cboSpeciality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WEB BACK-END", "WEB FRONT-END", "DEVOPS & AWS", "MOBILE", "STEM" }));
        cboSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSpecialityActionPerformed(evt);
            }
        });

        txtClassName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        btnAdd.setBackground(new java.awt.Color(102, 102, 255));
        btnAdd.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 204, 204));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(102, 102, 255));
        btnEdit.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 204, 204));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnLecturersList.setBackground(new java.awt.Color(102, 102, 255));
        btnLecturersList.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnLecturersList.setForeground(new java.awt.Color(255, 204, 204));
        btnLecturersList.setText("Lecturers' List");
        btnLecturersList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLecturersListActionPerformed(evt);
            }
        });

        spnLecturerId.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        chkLecturerIdLeftBlank.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        chkLecturerIdLeftBlank.setText("Left Blank");
        chkLecturerIdLeftBlank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLecturerIdLeftBlankActionPerformed(evt);
            }
        });

        btnBackToHomePage.setBackground(new java.awt.Color(102, 102, 255));
        btnBackToHomePage.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnBackToHomePage.setForeground(new java.awt.Color(255, 204, 255));
        btnBackToHomePage.setText("Back to Home Page");
        btnBackToHomePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToHomePageActionPerformed(evt);
            }
        });

        menuSetting.setForeground(new java.awt.Color(102, 153, 255));
        menuSetting.setText("Setting");
        menuSetting.setToolTipText("");
        menuSetting.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        menuSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSettingActionPerformed(evt);
            }
        });

        menuSecurity.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuSecurity.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        menuSecurity.setText("Security");
        menuSecurity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSecurityActionPerformed(evt);
            }
        });
        menuSetting.add(menuSecurity);

        ckbmenuDarkMode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ckbmenuDarkMode.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        ckbmenuDarkMode.setSelected(true);
        ckbmenuDarkMode.setText("Dark Mode");
        ckbmenuDarkMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbmenuDarkModeActionPerformed(evt);
            }
        });
        menuSetting.add(ckbmenuDarkMode);

        jMenuBar1.add(menuSetting);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAdd)
                            .addGap(32, 32, 32)
                            .addComponent(btnEdit)
                            .addGap(28, 28, 28)
                            .addComponent(btnLecturersList))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSchedule)
                                .addComponent(lblName)
                                .addComponent(lblSpeciality)
                                .addComponent(lblClassName))
                            .addGap(28, 28, 28)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rdOdd)
                                    .addComponent(rdEv)
                                    .addComponent(cboSpeciality, 0, 193, Short.MAX_VALUE)
                                    .addComponent(txtClassName))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(spnLecturerId)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(chkLecturerIdLeftBlank)))))
                    .addComponent(btnBackToHomePage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnBackToHomePage)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(spnLecturerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkLecturerIdLeftBlank))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSpeciality)
                            .addComponent(cboSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblClassName)
                            .addComponent(txtClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(rdEv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSchedule)
                        .addGap(14, 14, 14)
                        .addComponent(rdOdd)
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnEdit)
                            .addComponent(btnLecturersList))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdOddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdOddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdOddActionPerformed

    private void rdEvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdEvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdEvActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            spnLecturerId.commitEdit();
        } catch ( java.text.ParseException e ) { spnLecturerId.setValue(0);}
        int lecturerId = (Integer) spnLecturerId.getValue();
        Lecturer lecturer = null;
        if (!chkLecturerIdLeftBlank.isSelected()) {
            for (Lecturer lecturerTemp : Main.lecturers){
                if (lecturerId == lecturerTemp.getId()) {
                    lecturer = lecturerTemp;
                    lecturerTemp.setIsAssigned(true);
                }
            }
        }
        String className = txtClassName.getText();
        String speciality = (String) cboSpeciality.getSelectedItem();
        String schedule ="";
        if (rdEv.isSelected()){
            schedule = rdEv.getText();
        }
        else if (rdOdd.isSelected()){
            schedule = rdOdd.getText();
        }
        
        Clazz clazzNew = new Clazz(className, this.workplace, speciality, schedule, lecturer);
        clazzes.add(clazzNew);
        //Main.clazzes.add(clazzNew);
        diaSuccessfullyAdded.pack();
        diaSuccessfullyAdded.setVisible(true);
        diaSuccessfullyAdded.getPreferredSize();
        displayJTable(jTable1);
    }//GEN-LAST:event_btnAddActionPerformed

    private void cboSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSpecialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSpecialityActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    // lên gg tham khảo
    // xấu dã man chả hiểu sao cho nó đen xì 
    // e có thể cho background image hoặc background color
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==1){
            int row = jTable1.getSelectedRow();
            if (clazzes.get(row).getLecturer() == null) {
                spnLecturerId.setValue(0);
                chkLecturerIdLeftBlank.setSelected(true);
            } else {
                spnLecturerId.setValue(clazzes.get(row).getLecturer().getId());
                for (Lecturer lecturer : Main.lecturers){
                    if (lecturer.getId() == clazzes.get(row).getLecturer().getId()) {
                        lecturerOrigin = lecturer;
                    }
                }
                chkLecturerIdLeftBlank.setSelected(false);
            }
            if (clazzes.get(row).getSpeciality().equals(SpecialityConstant.WEBFRONTEND.value)){
                cboSpeciality.setSelectedIndex(1);
            } else if (clazzes.get(row).getSpeciality().equals(SpecialityConstant.WEBBACKEND.value)){
                cboSpeciality.setSelectedIndex(0);
            } else if (clazzes.get(row).getSpeciality().equals(SpecialityConstant.DEVOPSAWS.value)){
                cboSpeciality.setSelectedIndex(2);
            } else if (clazzes.get(row).getSpeciality().equals(SpecialityConstant.MOBILE.value)){
                cboSpeciality.setSelectedIndex(3);
            } else if (clazzes.get(row).getSpeciality().equals(SpecialityConstant.STEM.value)){
                cboSpeciality.setSelectedIndex(4);
            }
            txtClassName.setText(clazzes.get(row).getName());
            if (clazzes.get(row).getSchedule().equals(rdEv.getText())) {
                rdEv.setSelected(true);
                rdOdd.setSelected(false);
            } else if (clazzes.get(row).getSchedule().equals(rdOdd.getText())) {
                rdEv.setSelected(false);
                rdOdd.setSelected(true);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() == -1) {
            return;
        }
        int row = jTable1.getSelectedRow();
        Clazz clazz = clazzes.get(row);
        int lecturerId = (Integer) spnLecturerId.getValue();
        Lecturer lecturer = null;
        if (!chkLecturerIdLeftBlank.isSelected()) {
            for (Lecturer lecturerTemp : Main.lecturers){
                if (lecturerId == lecturerTemp.getId()) {
                    lecturer = lecturerTemp;
                    lecturerTemp.setIsAssigned(true);
                    if (lecturerTemp.getId() != lecturerOrigin.getId()) {
                        lecturerOrigin.setIsAssigned(false);
                    }
                }
            }
        }
        clazz.setLecturer(lecturer);
        clazz.setName( txtClassName.getText());
        clazz.setSpeciality( (String) cboSpeciality.getSelectedItem());
        String schedule ="";
        if (rdEv.isSelected()){
            schedule = rdEv.getText();
        }
        else if (rdOdd.isSelected()){
            schedule = rdOdd.getText();
        }
        clazz.setSchedule(schedule);
        clazzes.set(row, clazz);
        diaSuccessfullyEdited.pack();
        diaSuccessfullyEdited.setVisible(true);
        diaSuccessfullyEdited.getPreferredSize();
        displayJTable(jTable1);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnLecturersListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLecturersListActionPerformed
        // TODO add your handling code here:
        System.out.println("M1: "+clazzes);
        this.setVisible(false);
        new LecturerMangagementFrame(admin, workplace).setVisible(true);
    }//GEN-LAST:event_btnLecturersListActionPerformed

    private void chkLecturerIdLeftBlankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLecturerIdLeftBlankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkLecturerIdLeftBlankActionPerformed

    private void btnBackToHomePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToHomePageActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new HomeFrame(admin).setVisible(true);
    }//GEN-LAST:event_btnBackToHomePageActionPerformed

    private void btnCloseAddedDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseAddedDialogActionPerformed
        // TODO add your handling code here:
        diaSuccessfullyAdded.setVisible(false);
    }//GEN-LAST:event_btnCloseAddedDialogActionPerformed

    private void btnCloseEditedDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseEditedDialogActionPerformed
        // TODO add your handling code here:
        diaSuccessfullyEdited.setVisible(false);
    }//GEN-LAST:event_btnCloseEditedDialogActionPerformed

    private void menuSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSettingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuSettingActionPerformed

    private void ckbmenuDarkModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbmenuDarkModeActionPerformed
        // TODO add your handling code here:
        if (ckbmenuDarkMode.isSelected()){
            this.getContentPane().setBackground(Color.black);
            lblClassName.setForeground(Color.white);
            lblName.setForeground(Color.white);
            lblSchedule.setForeground(Color.white);
            lblSpeciality.setForeground(Color.white);
            rdEv.setForeground(Color.white);
            rdOdd.setForeground(Color.white);
        } else {
            this.getContentPane().setBackground(Color.white);
            lblClassName.setForeground(Color.black);
            lblName.setForeground(Color.black);
            lblSchedule.setForeground(Color.black);
            lblSpeciality.setForeground(Color.black);
            rdEv.setForeground(Color.black);
            rdOdd.setForeground(Color.black);
        }
    }//GEN-LAST:event_ckbmenuDarkModeActionPerformed

    private void menuSecurityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSecurityActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new SecurityFrame(admin).setVisible(true);
    }//GEN-LAST:event_menuSecurityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClazzMangementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClazzMangementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClazzMangementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClazzMangementFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClazzMangementFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBackToHomePage;
    private javax.swing.JButton btnCloseAddedDialog;
    private javax.swing.JButton btnCloseEditedDialog;
    private javax.swing.JButton btnEdit;
    private javax.swing.ButtonGroup btnGroupSchedule;
    private javax.swing.JButton btnLecturersList;
    private javax.swing.JComboBox<String> cboSpeciality;
    private javax.swing.JCheckBox chkLecturerIdLeftBlank;
    private javax.swing.JCheckBoxMenuItem ckbmenuDarkMode;
    private javax.swing.JDialog diaSuccessfullyAdded;
    private javax.swing.JDialog diaSuccessfullyEdited;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblClassName;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSchedule;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblSuccessfullyAddedDialog;
    private javax.swing.JLabel lblSuccessfullyEditedDialog;
    private javax.swing.JMenuItem menuSecurity;
    private javax.swing.JMenu menuSetting;
    private javax.swing.JRadioButton rdEv;
    private javax.swing.JRadioButton rdOdd;
    private javax.swing.JSpinner spnLecturerId;
    private javax.swing.JTextField txtClassName;
    // End of variables declaration//GEN-END:variables

    private void displayJTable(JTable jTable) {
        String col[] = {"Class's Id","Lecturer's Name","Speciality", "Class's Name", "Schedule"};
        DefaultTableModel tableModel = new DefaultTableModel(col,0);
        for(int i=0;i<clazzes.size();i++){
            String lecturerName = "";
            if (clazzes.get(i).getLecturer() != null) {
                lecturerName = clazzes.get(i).getLecturer().getName();
            }
            Object[] obj={clazzes.get(i).getId(), lecturerName, 
                clazzes.get(i).getSpeciality(), clazzes.get(i).getName(), 
                clazzes.get(i).getSchedule()};
            
            tableModel.addRow(obj);
        }
        jTable.setModel(tableModel);
    }
}
